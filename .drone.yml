kind: pipeline
name: default

steps:
- name: Composer Install
  image: composer
  commands:
  - composer install
  
- name: Translations
  image: lucor/php7-cli
  commands:
  - php bin/install.php translations develop
  
- name: Node, Bower Grunt
  image: digitallyseamless/nodejs-bower-grunt
  commands:
  - npm install && bower install && grunt
  
- name: Database Setup
  image: virtualforce/php7.1-pdo-mysql-ci:1.1
  commands:
  - echo MYSQL_HOST_NAME="Database" >> application/config/.env
  - echo MYSQL_USERNAME="root"  >> application/config/.env
  - echo MYSQL_PASSWORD=""  >> application/config/.env
  - echo MYSQL_DB_NAME="neptune" >> application/config/.env
  - echo ENVIROMENT="BUILD" >> application/config.env
  - vendor/bin/phinx migrate
   
- name: Build Docker image (DEV)
  image: php:7.3-apache
  when:
    branch: develop 
  commands:
   - apt-get update
   - apt-get install -y libicu-dev libgd-dev openssl
   - a2enmod rewrite
   - docker-php-ext-install mysqli bcmath intl gd
   - echo "date.timezone = \"\Europe/London\"" > /usr/local/etc/php/conf.d/timezone.ini
   - mv /drone/src/ ./app
   - ln -s /app/*[^public] /var/www
   - rm -rf /var/www/html
   - ln -nsf /app/public /var/www/html
   - chmod 755 /app/public/uploads
   - chown -R www-data:www-data /app/public /app/application
   - curl -L https://github.com/docker/compose/releases/download/1.7.1/docker-compose-`uname -s`-`uname -m` > docker-compose
   - chmod +x docker-compose
   - sudo mv docker-compose /usr/local/bin
   - docker tag neptune:$$DRONE_BUILD_NUMBER
   - docker push docker push registry.brycemas.duckdns.org/neptune:$$DRONE_BUILD_NUMBER

#- name: Collect Results
#  image: php:7.2.19-apache-stretch
#  when:
#    status:
#    - success
#    - failure
#  commands:
#    - apt-get update -y
#    - apt-get install zip unzip -y
#    - zip -r ./buildLog.zip /drone/src/tests/ /drone/src/application/logs/

- name: Notify Results
  image: appleboy/drone-telegram
  when:
    status:
    - success
    - failure
  settings:
    token:
      from_secret: telegram_api
    to:
      from_secret: telegram_user
    message: >
      {{#success build.status}}
        build {{build.number}} succeeded. Well Done.
      {{else}}
        build {{build.number}} failed.  Please fix me.
      {{/success}}
    document:
      ./buildLog.zip

services:
- name: Database
  image: mariadb:10.3.15
  ports:
  - 3306
  environment:
    MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
    MYSQL_DATABASE: neptune
